# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1
# set-window-option -g alternate-screen off

# Don't rename windows automatically
set -g allow-rename on

# enable focus events
set -g focus-events on

# Keep colors pretty, choose one
# set -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "screen-256color"
# set -g default-terminal 'tmux-256color'
# set -g default-terminal xterm-256color
# set -ga terminal-overrides ',xterm-*:Tc'

# set -g status off
set -g mouse on

set escape-time 0
set -g repeat-time 0

# act like vim
setw -g mode-keys vi

# vi keybindings for
set -g status-keys vi

###########
# BINDING #
###########

# Yanking while highlighting will copy data into system pasteboard.
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# bind copy-mode-vi v send -X begin-selection
# bind copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
# bind copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
# bind copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Resize panes like vim windows
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

# Make panes and windows open from the current directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Enable window reordering with ctrl-shift-a/d
bind h swap-window -t -1
bind l swap-window -t +1

# Reload config file
bind R source-file ~/.config/tmux/tmux.conf \; display-message 'Config reloaded...'

bind Z suspend-client

# Use C-space to perform tmux action in nested multiplexer
# bind-key C-space send-prefix
unbind C-b
set -g prefix C-Space
# bind Space copy-mode
# bind C-Space copy-mode
# bind C-Space last-window
# bind-key C-\ last-window
bind [ previous-window
bind ] next-window
bind t new-window
bind w kill-pane
bind q kill-session
# bind -n C-r next-window
# bind -n C-e previous-window
# bind C-s last-window
# bind -n C-D-S copy-mode
# bind -n C-w kill-pane
# bind -n C-t new-window

source-file ~/.config/tmux/line.conf;
run-shell ~/.config/tmux/line.conf
