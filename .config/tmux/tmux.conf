# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
source-file ~/.config/tmux/line.conf;

# Need to start shells with reattach-to-user-namespace for copying into OSX
# set-option -g default-command "reattach-to-user-namespace -l zsh"
# set-option -ga update-environment ' PTTY'

# improve colors
# set status-utf8 on
# set utf8 on

set -g default-terminal xterm-256color
set-option -ga terminal-overrides ",xterm-256color:Tc"

# set -g status-bg black
# set -g status-fg white
# alias tmux='tmux -2'

# Yanking while highlighting will copy data into system pasteboard.
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# set -g status off
set -g mouse on

set escape-time 0
set -g repeat-time 0

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Use vim keybindings in copy mode
setw -g mode-keys vi

# vi keybindings for
set -g status-keys vi

# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection

# prefix C-v will paste
bind-key C-v paste-buffer

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000


# Resize panes like vim windows
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Make panes and windows open from the current directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Enable window reordering with ctrl-shift-left/right
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Prefix, r to reload the tmux config
bind-key r source-file ~/.config/tmux/tmux.conf

# Use C-a a to perform tmux action in nested multiplexer
# bind-key a send-prefix
unbind C-b
set -g prefix C-Space
bind Space copy-mode
bind C-Space copy-mode
